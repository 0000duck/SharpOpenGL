<Window x:Class="MaterialEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MaterialEditor"
        xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
        xmlns:OpenTK="clr-namespace:OpenTK;assembly=OpenTK.GLControl"
        xmlns:ac="clr-namespace:AdornedControl;assembly=AdornedControl"
        mc:Ignorable="d"
        Title="Material Editor" Height="512" Width="1024">

    <Window.DataContext>
        <local:MainWindowViewModel></local:MainWindowViewModel>
    </Window.DataContext>  

    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary 
                    Source="SharedTemplate.xaml"
                    />
            </ResourceDictionary.MergedDictionaries>

            <RoutedUICommand x:Key="Commands.CreateNode" />
            <RoutedUICommand x:Key="Commands.CreateConstantVector3"></RoutedUICommand>
            <RoutedUICommand x:Key="Commands.CreateAddNode"/>
            <RoutedUICommand x:Key="Commands.DeleteConnection" />
            
            <DataTemplate DataType="{x:Type local:ConnectionOkIndicator}">
                <Grid
                    Width="80"
                    >
                    <Image 
                        Width="16"
                        Height="16"
                        Source="Resources/tick_16.png"
                        HorizontalAlignment="Right"
                        />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="inputConnectorTemplate">
                <Grid Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- The 'ConnectorItem' or anchor point for the connector. -->
                    <local:ConnectorItem Grid.Column="0" Width="15" Height="15" Cursor="Hand"/>
                    <!-- The name of the connector. -->
                    <TextBlock Grid.Column="1" Margin="10,0,0,0" Text="{Binding Name}" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            
            <DataTemplate x:Key="outputConnectorTemplate">
                <Grid HorizontalAlignment="Right" Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- The name of the connector. -->
                    <TextBlock Grid.Column="0" Text="{Binding Name}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Grid Grid.Column="1" Width="15" Height="15" Cursor="Hand">
                        <!-- The 'ConnectorItem' or anchor point for the connector. -->
                        <local:ConnectorItem />
                        <!-- Show a black dot at the start of the arrow when connected. -->
                        <Ellipse Visibility="{Binding IsConnectionAttached, Converter={StaticResource booleanToVisibilityConverter}}"
                    Margin="3"
                    Fill="{StaticResource connectionBrush}"
                    IsHitTestVisible="False"
                    />
                    </Grid>
                </Grid>
            </DataTemplate>
            
            

            <DataTemplate
                DataType="{x:Type local:ConnectionViewModel}"
                >

                <!-- 
                An adorned control is used, to represent the connection. 
                When the user hovers the mouse cursor over the connection, the 
                'delete connection' adorner pops up and allows them to delete the connection.
                -->
                <ac:AdornedControl
                    HorizontalAdornerPlacement="Mouse"
                    VerticalAdornerPlacement="Mouse"
                    IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}"
                    >

                    <!-- The connection is represented by a curved arrow. -->
                    <local:CurvedArrow
                        ArrowHeadLength="10"
                        ArrowHeadWidth="6"
                        Stroke="{StaticResource connectionBrush}"
                        StrokeThickness="2"
                        Fill="{StaticResource connectionBrush}"
                        Points="{Binding Points}"
                        />

                    <ac:AdornedControl.AdornerContent>

                        <!-- 
                        This is the adorner that pops up when the user hovers the mouse over the connection.
                        It displays a button that the user can click to delete the connection.
                        -->
                        <Canvas
                            x:Name="connectionAdornerCanvas"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Width="30"
                            Height="30"
                            >
                            <Line
                                X1="0"
                                Y1="30"
                                X2="15"
                                Y2="15"
                                Stroke="Black"
                                StrokeThickness="1"
                                />
                            <Button
                                x:Name="deleteConnectionButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Cursor="Hand"
                                Focusable="False"
                                Command="{StaticResource Commands.DeleteConnection}"
                                CommandParameter="{Binding}"
                                Template="{StaticResource deleteButtonTemplate}"
                                />
                        </Canvas>
                    </ac:AdornedControl.AdornerContent>
                </ac:AdornedControl>
            </DataTemplate>


            <Style TargetType="{x:Type local:NodeItem}">
                <Setter Property="ParentNetworkView" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NetworkView}}, Path=.}"></Setter>
                <Setter Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:NodeItem}">
                            <Grid>
                                <Border x:Name="selectionBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="4"
                                >
                                    <ContentPresenter></ContentPresenter>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="selectionBorder" Property="BorderBrush" Value="{StaticResource selectionBorderColor}"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="selectionBorder" Property="Background" Value="{StaticResource selectionBorderBackgroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type local:NodeViewModel}">
                <Grid MinWidth="140" Margin="10,6,10,6">
                    <!-- This rectangle is the main visual for the node. -->                    
                    <Rectangle
                            Stroke="{StaticResource nodeBorderBrush}"
                            StrokeThickness="1.3"
                            RadiusX="5"
                            RadiusY="5"
                            Fill="{StaticResource nodeFillBrush}"
                            />

                    <!-- 
                        This grid contains the node's connectors.
                        The margin is negative so that the connectors overlap the body of the node and it's selection border.
                        -->
                    <Grid
                            Margin="0,0,0,0"
                            >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" MinWidth="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- spacer -->
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- The name of the node. -->
                        <Grid Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Grid.Row="0" Margin="0,0,0,2">
                        <Border CornerRadius="5,5,0,0" BorderThickness="1.0" BorderBrush="Black" Background="{StaticResource nodeHeaderBrush}"></Border>
                        <TextBlock
                                Text="{Binding Name}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" Foreground="White"                               
                        />
                        </Grid>

                        <!-- Displays the node's input connectors. -->
                        <ItemsControl Margin="4,4,4,4"
                                Grid.Column="0"
                                Grid.Row="2"
                                ItemsSource="{Binding InputConnectors}"
                                ItemTemplate="{StaticResource inputConnectorTemplate}"
                                Focusable="False"
                                />

                        <!-- Displays the node's output connectors. -->
                        <ItemsControl Margin="4,4,4,4"
                                Grid.Column="2"
                                Grid.Row="2"
                                ItemsSource="{Binding OutputConnectors}"
                                ItemTemplate="{StaticResource outputConnectorTemplate}"
                                Focusable="False"
                                />
                    </Grid>
                </Grid>
            </DataTemplate>

            <Style TargetType="{x:Type ZoomAndPan:ZoomAndPanControl}">

                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="{x:Type ZoomAndPan:ZoomAndPanControl}"
                    >

                            <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        >

                                <!-- 
                        The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                    
                        A transforms computed from 'ContentScale', 'ContentOffsetX' and 'ContentOffsetY' are assigned 
                        to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                        
                        The alignment is set to top-left.  This allows the content offset to be used to place
                        the content in the center of the viewport when the viewport is bigger than the content.
                        -->
                                <ContentPresenter 
							x:Name="PART_Content"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            />

                            </Border>

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>

            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Create Node"
                      Command="{StaticResource Commands.CreateNode}"
                      ToolTip="Creates a new node"
                      >
            </MenuItem>
            <MenuItem Header="Create Constant Vector3"
                      Command="{StaticResource Commands.CreateConstantVector3}">
            </MenuItem>
            <MenuItem Header="Create Add Node" Command="{StaticResource Commands.CreateAddNode}">
                
            </MenuItem>
        </ContextMenu>
    </Window.ContextMenu>

    <Window.CommandBindings>
        <CommandBinding 
            Command="{StaticResource Commands.CreateNode}" 
            Executed="CreateNode_Executed" 
            />
        <CommandBinding
            Command="{StaticResource Commands.CreateConstantVector3}"
            Executed="CreateConstantVector3"/>
        <CommandBinding Command="{StaticResource Commands.CreateAddNode}" Executed="CreateAddNode">
        </CommandBinding>
        <CommandBinding 
            Command="{StaticResource Commands.DeleteConnection}" 
            Executed="DeleteConnection_Executed" 
            />
    </Window.CommandBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*">
            </ColumnDefinition>
            <ColumnDefinition>      
            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="2" BorderBrush="Black">
            <WindowsFormsHost Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Margin="2">
                <OpenTK:GLControl x:Name="mGlControl" Load="GLControlLoad" Resize="GLControlResize" Paint="GLControlPaint"></OpenTK:GLControl>
            </WindowsFormsHost>
        </Border>
        <Grid Grid.Row="0" Grid.Column="1" Margin="3" Grid.RowSpan="2">
            <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Focusable="False">
                <ZoomAndPan:ZoomAndPanControl 
                    x:Name="zoomAndPanControl" 
                    ContentScale="{Binding ContentScale, Mode=TwoWay}"
                    ContentOffsetX="{Binding ContentOffsetX, Mode=TwoWay}"
                    ContentOffsetY="{Binding ContentOffsetY, Mode=TwoWay}"
                    ContentViewportWidth="{Binding ContentViewportWidth, Mode=OneWayToSource}"
                    ContentViewportHeight="{Binding ContentViewportHeight, Mode=OneWayToSource}"
                    Background="LightGray"
                    Focusable="False">
                    <AdornerDecorator>
                        <Grid Width="{Binding ContentWidth}" Height="{Binding ContentHeight}">
                            <local:NetworkView x:Name="networkControl" 
                                       NodesSource="{Binding Path=Network.Nodes}" 
                                       ConnectionsSource="{Binding Path=Network.Connections}"
                                       
                                       ConnectionDragStarted="networkControl_ConnectionDragStarted"
                                       ConnectionDragging="networkControl_ConnectionDragging"
                                       ConnectionDragCompleted="networkControl_ConnectionDragCompleted"
                                       QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
                                               
                                       MouseDown="networkControl_MouseDown"
                                       MouseUp="networkControl_MouseUp"
                                       MouseMove="networkControl_MouseMove"
                                       MouseWheel="networkControl_MouseWheel"
                                       >
                            </local:NetworkView>
                            <Canvas
                            x:Name="dragZoomCanvas"
                            Visibility="Collapsed"
                            >
                                <Border 
                                x:Name="dragZoomBorder"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Background="Silver"
                                CornerRadius="1"
                                Opacity="0"
                                />
                            </Canvas>
                        </Grid>
                    </AdornerDecorator>
                </ZoomAndPan:ZoomAndPanControl>
            </ScrollViewer>
        </Grid>
        
    </Grid>    
</Window>
