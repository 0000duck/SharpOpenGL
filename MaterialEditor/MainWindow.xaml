<Window x:Class="MaterialEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MaterialEditor"
        xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
        xmlns:OpenTK="clr-namespace:OpenTK;assembly=OpenTK.GLControl"
        xmlns:ac="clr-namespace:AdornedControl;assembly=AdornedControl"
        mc:Ignorable="d"
        Title="Material Editor" Height="512" Width="1024">

    <Window.DataContext>
        <local:MainWindowViewModel></local:MainWindowViewModel>
    </Window.DataContext>  

    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary 
                    Source="SharedTemplate.xaml"                    
                    />
                <ResourceDictionary Source="DetailViewTemplate.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <RoutedUICommand x:Key="Commands.CreateNode" />
            <RoutedUICommand x:Key="Commands.CreateConstantVector3"></RoutedUICommand>
            <RoutedUICommand x:Key="Commands.CreateVector3AddNode"/>
            <RoutedUICommand x:Key="Commands.DeleteConnection" />
            <RoutedUICommand x:Key="Commands.CreateSineNode"/>

            <DataTemplate DataType="{x:Type local:ConnectionOkIndicator}">
                <Grid
                    Width="80"
                    >
                    <Image 
                        Width="16"
                        Height="16"
                        Source="Resources/tick_16.png"
                        HorizontalAlignment="Right"
                        />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:ConnectionBadIndicator}">
                <Grid
                    Width="80"
                    >
                    <Image 
                        Width="16"
                        Height="16"
                        Source="Resources/block_16.png"
                        HorizontalAlignment="Right"
                        />
                </Grid>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type local:ConnectionViewModel}">
                <!-- 
                An adorned control is used, to represent the connection. 
                When the user hovers the mouse cursor over the connection, the 
                'delete connection' adorner pops up and allows them to delete the connection.
                -->
                <ac:AdornedControl
                    HorizontalAdornerPlacement="Mouse"
                    VerticalAdornerPlacement="Mouse"
                    IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}"
                    >

                    <!-- The connection is represented by a curved arrow. -->
                    <local:CurvedArrow
                        ArrowHeadLength="10"
                        ArrowHeadWidth="6"
                        Stroke="{StaticResource connectionBrush}"
                        StrokeThickness="2"
                        Fill="{StaticResource connectionBrush}"
                        Points="{Binding Points}"
                        />

                    <ac:AdornedControl.AdornerContent>

                        <!-- 
                        This is the adorner that pops up when the user hovers the mouse over the connection.
                        It displays a button that the user can click to delete the connection.
                        -->
                        <Canvas
                            x:Name="connectionAdornerCanvas"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Width="30"
                            Height="30"
                            >
                            <Line
                                X1="0"
                                Y1="30"
                                X2="15"
                                Y2="15"
                                Stroke="Black"
                                StrokeThickness="1"
                                />
                            <Button
                                x:Name="deleteConnectionButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Cursor="Hand"
                                Focusable="False"
                                Command="{StaticResource Commands.DeleteConnection}"
                                CommandParameter="{Binding}"
                                Template="{StaticResource deleteButtonTemplate}"
                                />
                        </Canvas>
                    </ac:AdornedControl.AdornerContent>
                </ac:AdornedControl>
            </DataTemplate>


            <Style TargetType="{x:Type local:NodeItem}">
                <Setter Property="ParentNetworkView" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NetworkView}}, Path=.}"></Setter>
                <Setter Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                </Setter>
                <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:NodeItem}">
                            <Grid>
                                <Border x:Name="selectionBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="4"
                                >
                                    <ContentPresenter></ContentPresenter>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="selectionBorder" Property="BorderBrush" Value="{StaticResource selectionBorderColor}"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="selectionBorder" Property="Background" Value="{StaticResource selectionBorderBackgroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<DataTemplate DataType="{x:Type local:NodeViewModel}">-->
            

            <Style TargetType="{x:Type ZoomAndPan:ZoomAndPanControl}">

                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="{x:Type ZoomAndPan:ZoomAndPanControl}"
                    >

                            <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        >

                                <!-- 
                        The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                    
                        A transforms computed from 'ContentScale', 'ContentOffsetX' and 'ContentOffsetY' are assigned 
                        to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                        
                        The alignment is set to top-left.  This allows the content offset to be used to place
                        the content in the center of the viewport when the viewport is bigger than the content.
                        -->
                                <ContentPresenter 
							x:Name="PART_Content"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            />

                            </Border>

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>

            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Create Node" Command="{StaticResource Commands.CreateNode}" ToolTip="Creates a new node"/>
            <MenuItem Header="Create Constant Vector3" Command="{StaticResource Commands.CreateConstantVector3}"></MenuItem>
            <MenuItem Header="Create Vector3 Add Node" Command="{StaticResource Commands.CreateVector3AddNode}"></MenuItem>
            <MenuItem Header="Create Sine Node" Command="{StaticResource Commands.CreateSineNode}"></MenuItem>
        </ContextMenu>
    </Window.ContextMenu>

    <Window.CommandBindings>
        <CommandBinding 
            Command="{StaticResource Commands.CreateNode}" 
            Executed="CreateNode_Executed" 
            />
        <CommandBinding
            Command="{StaticResource Commands.CreateConstantVector3}"
            Executed="CreateConstantVector3"/>
        <CommandBinding Command="{StaticResource Commands.CreateVector3AddNode}" Executed="CreateVector3AddNode">
        </CommandBinding>
        <CommandBinding 
            Command="{StaticResource Commands.DeleteConnection}" 
            Executed="DeleteConnection_Executed" 
            />
        <CommandBinding Command="{StaticResource Commands.CreateSineNode}" Executed="CreateSineNode"></CommandBinding>
    </Window.CommandBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*">
            </ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition>      
            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="2" BorderBrush="Black">
            <WindowsFormsHost Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Margin="2">
                <OpenTK:GLControl x:Name="mGlControl" Load="GLControlLoad" Resize="GLControlResize" Paint="GLControlPaint"></OpenTK:GLControl>
            </WindowsFormsHost>
        </Border>
        <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch"></GridSplitter>
        <Grid Grid.Row="0" Grid.Column="2" Margin="3" Grid.RowSpan="2">
            <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Focusable="False">
                <ZoomAndPan:ZoomAndPanControl 
                    x:Name="zoomAndPanControl" 
                    ContentScale="{Binding ContentScale, Mode=TwoWay}"
                    ContentOffsetX="{Binding ContentOffsetX, Mode=TwoWay}"
                    ContentOffsetY="{Binding ContentOffsetY, Mode=TwoWay}"
                    ContentViewportWidth="{Binding ContentViewportWidth, Mode=OneWayToSource}"
                    ContentViewportHeight="{Binding ContentViewportHeight, Mode=OneWayToSource}"
                    Background="DarkGray"
                    Focusable="False">
                    <AdornerDecorator>
                        <Grid Width="{Binding ContentWidth}" Height="{Binding ContentHeight}">
                            <local:NetworkView x:Name="networkControl" 
                                       NodesSource="{Binding Path=Network.Nodes}" 
                                       ConnectionsSource="{Binding Path=Network.Connections}"
                                       
                                       ConnectionDragStarted="networkControl_ConnectionDragStarted"
                                       ConnectionDragging="networkControl_ConnectionDragging"
                                       ConnectionDragCompleted="networkControl_ConnectionDragCompleted"
                                       QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
                                               
                                       MouseDown="networkControl_MouseDown"
                                       MouseUp="networkControl_MouseUp"
                                       MouseMove="networkControl_MouseMove"
                                       MouseWheel="networkControl_MouseWheel"
                                       >                                
                            </local:NetworkView>
                            <Canvas
                            x:Name="dragZoomCanvas"
                            Visibility="Collapsed"
                            >
                                <Border 
                                x:Name="dragZoomBorder"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Background="Silver"
                                CornerRadius="1"
                                Opacity="0"
                                />
                            </Canvas>
                        </Grid>
                    </AdornerDecorator>
                </ZoomAndPan:ZoomAndPanControl>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0" Margin="3">
            <ScrollViewer>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Button Click="OnBtnCompileClick">Compile</Button>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>    
</Window>
