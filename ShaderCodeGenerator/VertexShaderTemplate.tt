<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OpenTK" #>
<#@ import namespace="OpenTK.Graphics.OpenGL" #>

namespace SharpOpenGL.<#=VSProgram.ProgramName#>
{
	public class <#=VSProgram.ProgramName#>VertexShader
	{
		ShaderProgram VSProgram;

		public void Initialize()
		{
		<#foreach(var UniformBlockName in VSProgram.GetActiveUniformBlockNames())
		{#>
			<#=UniformBlockName#>Buffer = new DynamicUniformBuffer();
		<#}#>
		}

		<#foreach(var UniformBlockName in VSProgram.GetActiveUniformBlockNames())
		{#>
		DynamicUniformBuffer <#=UniformBlockName#>Buffer;
		<#}#>

		<#foreach(var UniformBlockName in VSProgram.GetActiveUniformBlockNames())
		{#>
		public void Set<#=UniformBlockName#>BlockData()
		{
			var Loc = VSProgram.GetUniformBlockIndex("<#=UniformBlockName#>");
			<#=UniformBlockName#>Buffer.BindBufferBase(Loc);
			<#=UniformBlockName#>Buffer.BufferWholeData(Data);
		}
		<#}#>
	}
}