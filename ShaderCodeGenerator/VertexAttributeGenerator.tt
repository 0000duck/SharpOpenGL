<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OpenTK" #>
<#@ import namespace="OpenTK.Graphics.OpenGL" #>

<#
	int nTotalSize = 0;
	for(int i =0; i < VertexAttributeList.Count; ++i)
	{
		nTotalSize += VertexAttributeList[i].Size;
	}
#>


[StructLayout(LayoutKind.Explicit,Size=<#= nTotalSize #>)]
public struct <#= StructName #>
{
	<# 
	for(int i = 0; i < VertexAttributeList.Count; ++i)
	{
		int nOffset = 0;
		for(int j = 0; j < i; ++j)
		{
			nOffset += VertexAttributeList[j].Size;
		}
	#>
		
	[FieldOffset(<#=nOffset#>)]
	public <#=VertexAttributeList[i].AttributeTypeString#> <#=VertexAttributeList[i].Name#>;
	<#
	}
	#>
}
